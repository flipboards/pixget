#!/usr/bin/python3
# -*- coding: utf-8 -*-
# This file scrapes image from the corresponding database.

import pixget
import codecs
import sys
import getopt
import os


def read_info_file(filename, id_pool, start, end=0):
    """
    Read image info file generated by infoscraper.
    Currently it will only download no-multiple image.
    :param filename:
    :param id_pool:
    :param start:
    :param end:
    :return: 1 for error
    """
    try:
        with codecs.open(filename, 'r', 'utf-8') as f:
            fl = f.readlines()
    except IOError:
        print('Cannot onpen file. Please check the name.')
        return 1

    if end == 0:
        end = len(fl)
    for l in fl[start:end]:
        if l.split('\t', 4)[2] == 'False':  # not a multiple image
            id_pool.append(int(l.split('\t', 2)[0]))


def main():

    try:
        opts, args = getopt.getopt(sys.argv[1:], 'i:s:e:o:h')
    except getopt.GetoptError:
        print('Use -h to get help.')
        return 1

    input_path = ''
    output_path = ''
    start = 1
    end = 0

    for opt, arg in opts:
        if opt == '-i':
            input_path = arg
            if not output_path:
                output_path = arg.split('.')[0]
        elif opt == '-s':
            start = arg
        elif opt == '-e':
            end = arg
        elif opt == '-o':
            output_path = arg
        elif opt == '-h':
            print('Usage: python imgscraper.py -i [input] (-s [startpage]) (-e [endpage]) (-o [output path])')
            return

    if not input_path:
        print('Please specify an input file!')
        return 1

    idPool = []
    read_info_file(input_path, idPool, start, end)

    imgInfoPool = []
    print('Getting image urls... total ' + str(len(idPool)))
    cnt = 0
    for _id in idPool:
        print('Get image ' + str(cnt) + '/' + str(len(idPool)), end='\r')
        pixget.get_image_url(_id, imgInfoPool, 2)
        cnt += 1
    print('Downloading... total ' + str(len(imgInfoPool)))

    try:
        os.mkdir(output_path)
    except FileExistsError:
        print('The directory already exists.')
    pixget.download_image(output_path, imgInfoPool)


if __name__ == '__main__':
    main()
